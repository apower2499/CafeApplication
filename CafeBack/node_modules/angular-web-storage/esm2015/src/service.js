import { Injectable } from '@angular/core';
import { StorageUtil, isBrowser } from './util';
import * as i0 from "@angular/core";
export class StorageService {
    constructor(storage) {
        this.storage = storage;
    }
    get(key) {
        return StorageUtil.get(this.storage, key);
    }
    set(key, value, expiredAt = 0, expiredUnit = 'd') {
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    }
    /**
     * 删除指定key，如：
     * - `remove('key')` 删除 `key` 键
     * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
     * @param key 键名或正则表达式
     */
    remove(key) {
        if (typeof key === 'string') {
            StorageUtil.remove(this.storage, key);
            return;
        }
        let index = 0;
        let next = StorageUtil.key(this.storage, index);
        const ls = [];
        while (next) {
            if (key.test(next)) {
                ls.push(next);
            }
            next = StorageUtil.key(this.storage, ++index);
        }
        ls.forEach((v) => StorageUtil.remove(this.storage, v));
    }
    clear() {
        this.storage.clear();
    }
}
StorageService.decorators = [
    { type: Injectable }
];
StorageService.ctorParameters = () => [
    { type: Storage }
];
export class LocalStorageService extends StorageService {
    constructor() {
        super(isBrowser ? localStorage : null);
    }
}
LocalStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
LocalStorageService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
LocalStorageService.ctorParameters = () => [];
export class SessionStorageService extends StorageService {
    constructor() {
        super(isBrowser ? sessionStorage : null);
    }
}
SessionStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
SessionStorageService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
SessionStorageService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9zcmMvc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQWUsU0FBUyxFQUFFLE1BQU0sUUFBUSxDQUFDOztBQUc3RCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUFvQixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO0lBQUcsQ0FBQztJQUV4QyxHQUFHLENBQUMsR0FBVztRQUNiLE9BQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxHQUFHLENBQ0QsR0FBVyxFQUNYLEtBQVUsRUFDVixZQUFvQixDQUFDLEVBQ3JCLGNBQTJCLEdBQUc7UUFFOUIsT0FBTyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLEdBQW9CO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN0QyxPQUFPO1NBQ1I7UUFDRCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLElBQUksR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEQsTUFBTSxFQUFFLEdBQWEsRUFBRSxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxFQUFFO1lBQ1gsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNsQixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2Y7WUFDRCxJQUFJLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDL0M7UUFDRCxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7O1lBMUNGLFVBQVU7OztZQUVvQixPQUFPOztBQTRDdEMsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGNBQWM7SUFDckQ7UUFDRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Ozs7WUFKRixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzs7QUFRbEMsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGNBQWM7SUFDdkQ7UUFDRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7Ozs7WUFKRixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RvcmFnZVV0aWwsIEV4cGlyZWRVbml0LCBpc0Jyb3dzZXIgfSBmcm9tICcuL3V0aWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3RvcmFnZVNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHN0b3JhZ2U6IFN0b3JhZ2UpIHt9XG5cbiAgZ2V0KGtleTogc3RyaW5nKTogYW55IHtcbiAgICByZXR1cm4gU3RvcmFnZVV0aWwuZ2V0KHRoaXMuc3RvcmFnZSwga2V5KTtcbiAgfVxuXG4gIHNldChcbiAgICBrZXk6IHN0cmluZyxcbiAgICB2YWx1ZTogYW55LFxuICAgIGV4cGlyZWRBdDogbnVtYmVyID0gMCxcbiAgICBleHBpcmVkVW5pdDogRXhwaXJlZFVuaXQgPSAnZCcsXG4gICk6IHZvaWQge1xuICAgIHJldHVybiBTdG9yYWdlVXRpbC5zZXQodGhpcy5zdG9yYWdlLCBrZXksIHZhbHVlLCBleHBpcmVkQXQsIGV4cGlyZWRVbml0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliKDpmaTmjIflrpprZXnvvIzlpoLvvJpcbiAgICogLSBgcmVtb3ZlKCdrZXknKWAg5Yig6ZmkIGBrZXlgIOmUrlxuICAgKiAtIGByZW1vdmUoL0JNYXBfXFx3Ky8pYCDmibnph4/liKDpmaTmiYDmnIkgQk1hcF8g5byA5aS055qE6ZSuXG4gICAqIEBwYXJhbSBrZXkg6ZSu5ZCN5oiW5q2j5YiZ6KGo6L6+5byPXG4gICAqL1xuICByZW1vdmUoa2V5OiBzdHJpbmcgfCBSZWdFeHApOiB2b2lkIHtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIFN0b3JhZ2VVdGlsLnJlbW92ZSh0aGlzLnN0b3JhZ2UsIGtleSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbGV0IG5leHQgPSBTdG9yYWdlVXRpbC5rZXkodGhpcy5zdG9yYWdlLCBpbmRleCk7XG4gICAgY29uc3QgbHM6IHN0cmluZ1tdID0gW107XG4gICAgd2hpbGUgKG5leHQpIHtcbiAgICAgIGlmIChrZXkudGVzdChuZXh0KSkge1xuICAgICAgICBscy5wdXNoKG5leHQpO1xuICAgICAgfVxuICAgICAgbmV4dCA9IFN0b3JhZ2VVdGlsLmtleSh0aGlzLnN0b3JhZ2UsICsraW5kZXgpO1xuICAgIH1cbiAgICBscy5mb3JFYWNoKCh2KSA9PiBTdG9yYWdlVXRpbC5yZW1vdmUodGhpcy5zdG9yYWdlLCB2KSk7XG4gIH1cblxuICBjbGVhcigpOiB2b2lkIHtcbiAgICB0aGlzLnN0b3JhZ2UuY2xlYXIoKTtcbiAgfVxufVxuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVNlcnZpY2UgZXh0ZW5kcyBTdG9yYWdlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKGlzQnJvd3NlciA/IGxvY2FsU3RvcmFnZSA6IG51bGwpO1xuICB9XG59XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIGV4dGVuZHMgU3RvcmFnZVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihpc0Jyb3dzZXIgPyBzZXNzaW9uU3RvcmFnZSA6IG51bGwpO1xuICB9XG59XG4iXX0=